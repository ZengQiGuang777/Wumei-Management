{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  data() {\n    //验证码校验规则\n    let checkCode = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('请输入验证码'));\n      } else {\n        if (value.length === 4) {\n          callback();\n        }\n      }\n    };\n    //验证第一次输入密码\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    //验证二次输入密码\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error(\"两次密码输入不一致\"));\n      } else {\n        callback();\n      }\n    };\n    //验证用户名\n    let validatorAccount = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('用户名不能为空'));\n      } else if (value.length > 15) {\n        return callback(new Error('用户名不能超过15位'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        account: '',\n        pass: '',\n        checkPass: '',\n        code: ''\n      },\n      rules: {\n        account: [{\n          validator: validatorAccount,\n          trigger: 'change'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'change'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'change'\n        }],\n        code: [{\n          validator: checkCode,\n          trigger: 'change'\n        }]\n      },\n      inputStye: '320px'\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["data","checkCode","rule","value","callback","Error","length","validatePass","ruleForm","checkPass","$refs","validateField","validatePass2","pass","validatorAccount","account","code","rules","validator","trigger","inputStye","methods","submitForm","formName","validate","valid","alert","console","log","resetForm","resetFields"],"sources":["src/views/users/create.vue"],"sourcesContent":["<script>\nexport default {\n    data() {\n        //验证码校验规则\n        let checkCode = (rule, value, callback) => {\n            if (!value) {\n                return callback(new Error('请输入验证码'));\n            } else {\n                if (value.length === 4) {\n                    callback()\n                }\n            }\n        };\n        //验证第一次输入密码\n        let validatePass = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入密码'));\n            } else {\n                if (this.ruleForm.checkPass !== '') {\n                    this.$refs.ruleForm.validateField('checkPass');\n                }\n                callback();\n            }\n        };\n        //验证二次输入密码\n        let validatePass2 = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请再次输入密码'));\n            } else if (value !== this.ruleForm.pass) {\n                callback(new Error(\"两次密码输入不一致\"));\n            } else {\n                callback();\n            }\n        };\n        //验证用户名\n        let validatorAccount = (rule, value, callback) => {\n            if (!value) {\n                return callback(new Error('用户名不能为空'));\n            } else if (value.length > 15) {\n                return callback(new Error('用户名不能超过15位'))\n            } else {\n                callback()\n            }\n        }\n        return {\n            ruleForm: {\n                account: '',\n                pass: '',\n                checkPass: '',\n                code: '',\n            },\n            rules: {\n                account: [{ validator: validatorAccount, trigger: 'change' }],\n                pass: [{ validator: validatePass, trigger: 'change' }],\n                checkPass: [{ validator: validatePass2, trigger: 'change' }],\n                code: [{ validator: checkCode, trigger: 'change' }],\n            },\n            inputStye: '320px'\n        };\n    },\n    methods: {\n        submitForm(formName) {\n            this.$refs[formName].validate(valid => {\n                if (valid) {\n                    alert('submit!');\n                } else {\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        },\n        resetForm(formName) {\n            this.$refs[formName].resetFields();\n        },\n    },\n};\n</script>\n<template>\n    <a-form-model ref=\"ruleForm\" :model=\"ruleForm\" :rules=\"rules\" class=\"container\">\n        <a-form-model-item has-feedback prop=\"account\">\n            <a-input v-model=\"ruleForm.account\" autocomplete=\"off\" placeholder=\"账号\" :style=\"{ width: inputStye }\">\n                <a-icon slot=\"prefix\" type=\"lock\" style=\"color: rgba(0,0,0,.25)\" />\n            </a-input>\n        </a-form-model-item>\n        <a-form-model-item has-feedback prop=\"pass\">\n            <a-input v-model=\"ruleForm.pass\" type=\"password\" autocomplete=\"off\" placeholder=\"密码\"\n                :style=\"{ width: inputStye }\" />\n        </a-form-model-item>\n        <a-form-model-item has-feedback prop=\"checkPass\">\n            <a-input v-model=\"ruleForm.checkPass\" type=\"password\" autocomplete=\"off\" placeholder=\"确认密码\"\n                :style=\"{ width: inputStye }\" />\n        </a-form-model-item>\n        <a-form-model-item has-feedback prop=\"code\">\n            <a-input v-model=\"ruleForm.code\" type=\"number\" placeholder=\"验证码\" :style=\"{ width: inputStye }\" />\n        </a-form-model-item>\n        <a-form-model-item>\n            <a-button type=\"primary\" @click=\"submitForm('ruleForm')\">\n                注册\n            </a-button>\n        </a-form-model-item>\n    </a-form-model>\n</template>\n\n\n<style lang=\"less\" scoped>\n.container {\n    width: 500px;\n    margin-top: -300px;\n    text-align: center;\n}\n</style>"],"mappings":";AACA;EACAA,KAAA;IACA;IACA,IAAAC,SAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACA,OAAAC,QAAA,KAAAC,KAAA;MACA;QACA,IAAAF,KAAA,CAAAG,MAAA;UACAF,QAAA;QACA;MACA;IACA;IACA;IACA,IAAAG,YAAA,GAAAA,CAAAL,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAG,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAP,QAAA;MACA;IACA;IACA;IACA,IAAAQ,aAAA,GAAAA,CAAAV,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAK,QAAA,CAAAK,IAAA;QACAT,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;IACA,IAAAU,gBAAA,GAAAA,CAAAZ,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACA,OAAAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,CAAAG,MAAA;QACA,OAAAF,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAI,QAAA;QACAO,OAAA;QACAF,IAAA;QACAJ,SAAA;QACAO,IAAA;MACA;MACAC,KAAA;QACAF,OAAA;UAAAG,SAAA,EAAAJ,gBAAA;UAAAK,OAAA;QAAA;QACAN,IAAA;UAAAK,SAAA,EAAAX,YAAA;UAAAY,OAAA;QAAA;QACAV,SAAA;UAAAS,SAAA,EAAAN,aAAA;UAAAO,OAAA;QAAA;QACAH,IAAA;UAAAE,SAAA,EAAAjB,SAAA;UAAAkB,OAAA;QAAA;MACA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAb,KAAA,CAAAa,QAAA,EAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAC,UAAAN,QAAA;MACA,KAAAb,KAAA,CAAAa,QAAA,EAAAO,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}