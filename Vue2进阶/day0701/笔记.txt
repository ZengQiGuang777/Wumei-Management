面试题：怎样理解 Vue 的单向数据流？
- 所谓单向数据流，指的是“属性传递是单向的”
  + 父组件可以基于属性把信息传递给子组件  <Child :x="10" title="..."/>
  + 但是反过来，子组件是无法基于属性把信息传递给父组件的
- 我个人理解的“单向数据流”，应该还包含：父子组件的钩子函数触发时机，也是遵循“单向、深度优先”原则的
  第一次渲染：
    父beforeCreate -> 父created -> 父beforeMount 
    -> 父组件渲染「子beforeCreate -> 子created -> 子beforeMount -> 子组件渲染 -> 子mounted」
    -> 父mounted
  父组件更新：
    父beforeUpdate 
    -> 父组件更新「子beforeUpdate -> 子组件更新 -> 子updated」
    -> 父updated
  ......

==========================
面试题：父组件可以监听到子组件的生命周期吗？
父组件想监测到子组件的钩子函数触发，大体上有两种方案：
@1 发布订阅
  + 父组件向子组件事件池中注入自定义事件
  + 子组件在指定的钩子函数触发时，通知自定义事件执行即可
  父组件：
  <Child @md="childMounted" />
  methods: {
    childMounted(childBtn) {
        console.log('子组件第一次渲染完毕了',childBtn)
    }
  }
  子组件：
  mounted() {
    this.$emit('md',this.$refs.btn)
  }
@2 直接基于 @hook:钩子函数 监听即可
  父组件：
  <Child @hook:mounted="childMounted" />
虽然第二种方式比较简单，但是第一种发布订阅的模式，其支持：给父组件的方法传递实参（可以是子组件中的一些内容），所以平时开发中，需要传参则采用第一种，不需要则采用第二种即可！！


==========================
面试题：vue中组件和插件有什么区别？

==========================
面试题：平时开发中，你有没有封装过公共组件？如果封装过，则简单说一下你当时是怎么考虑的！